import pyautogui
import pyperclip
import time
import clipboard
import docx
import pandas
import numpy
from pathlib import Path
import os.path

word = 3
obtainedValues = [[0,0,0,0,0,0,0,0,0,0,0,0],
                  [0,0,0,0,0,0,0,0,0,0,0,0],
                  0]

def paste(word):
    text = clipboard.paste()
    text = text.split()
    text = text[word]
    if (word == 3):
        word = 2
    else:
        word = 3
    clipboard.copy(text)
    return word

def addData(word, obtainedValues):
    text = clipboard.paste()
    obtainedValues[word-2][obtainedValues[2]] = text
    if(word == 3):
        obtainedValues[2] += 1
    return obtainedValues
    
def otherPaste(index):
    line = str(points[index])
    for i in range(0, len(line)):
        pyautogui.hotkey(line[i])
    pyautogui.press('enter')
    time.sleep(.01)


if(os.path.isfile('points.txt')):
    with open('points.txt') as f:
        lines = str(f.readlines())

    for i in range(0, len(lines)):
        if lines[i] == 'P':
            noOfPoints = int(lines[i+1] + lines[i+2])
    lines = lines.split()
        
    points = [[None,None]] * noOfPoints

    currentPoint = 0
    point = ""
    copy = False

    for i in range (1, len(lines)):
        for j in range (0, len(lines[i])):
            if lines[i][j] == ')':
                copy = False
                points[currentPoint] = point
                point = ""
                currentPoint += 1
                
            if copy:
                point = point + lines[i][j]
                
            if lines[i][j] == '(':
                copy = True
#    MAGNETOSTATICS COSMIN
    positions = [[ 132 , 115 , 1 ],
                 [ 470 , 590 , 1 ],
                 [ 543 , 573 , 1 ],
                 [ 275 , 99  , 1 ],
                 [ 772 , 536 , 1 ],
                 [ 299 , 206 , 1 ],
                 [ 299 , 206 , 1 ],
                 [ 362 , 357 , 2 ],
                 [ 451 , 553 , 1 ],
                 [ 301 , 447 , 2 ],
                 [ 371 , 645 , 1 ]]

#    ELECTROSTATICS STEPHAN
#    positions = [[ 153 , 137 , 1 ],
#                 [ 454 , 616 , 1 ],
#                 [ 555 , 588 , 1 ],
#                 [ 291 , 114 , 1 ],
#                 [ 765 , 534 , 1 ],
#                 [ 315 , 236 , 1 ],
#                 [ 315 , 236 , 1 ],
#                 [ 339 , 359 , 2 ],
#                 [ 500 , 605 , 1 ],
#                 [ 339 , 394 , 2 ],
#                 [ 500 , 640 , 1 ]]

#    MAGNETOSTATICS STEPHAN
#    positions = [[ 153 , 137 , 1 ],
#                 [ 454 , 616 , 1 ],
#                 [ 555 , 588 , 1 ],
#                 [ 291 , 114 , 1 ],
#                 [ 765 , 534 , 1 ],
#                 [ 315 , 236 , 1 ],
#                 [ 315 , 236 , 1 ],
#                 [ 318 , 390 , 2 ],
#                 [ 500 , 640 , 1 ],
#                 [ 318 , 485 , 2 ],
#                 [ 500 , 735 , 1 ]]

#    ELECTROSTATICS COSMIN
#    positions = [[ 132 , 115 , 1 ],
#                 [ 470 , 600 , 1 ],
#                 [ 543 , 573 , 1 ],
#                 [ 275 , 99  , 1 ],
#                 [ 772 , 536 , 1 ],
#                 [ 299 , 206 , 1 ],
#                 [ 299 , 206 , 1 ],
#                 [ 307 , 325 , 2 ],
#                 [ 448 , 528 , 1 ],
#                 [ 320 , 355 , 2 ],
#                 [ 448 , 558 , 1 ]]

    value = 0


    while(value < len(points)):
        move = 0
        for position in positions:
            if(value == 0 or move > 4):
                if(position[2] == 1):
                    pyautogui.click(position[0], position[1])
                    if(move == 8 or move == 10):
                        word = int(paste(word))
                        obtainedValues = addData(word, obtainedValues)
                    
                    if(move == 6):
                        otherPaste(value)
                        value = value + 1
                else:
                    pyautogui.rightClick(position[0], position[1])
                if(move == 1):
                    time.sleep(1)
                time.sleep(0.001)
            move = move + 1



    path = Path('FEE3 Autogenerated Word.docx')
    if(path.is_file()):
        doc = docx.Document("FEE3 Autogenerated Word.docx")
    else:
        doc = docx.Document()

    df = pandas.DataFrame(data = {'Values': []})

    for i in range (0, 2):
        for j in range (0, obtainedValues[2]):
            df.loc[len(df.index)] = [obtainedValues[i][j]]

    t = doc.add_table(rows=(df.shape[0] + 1), cols=df.shape[1])
    for j in range(df.shape[1]):
        t.cell(0, j).text = df.columns[j]
    for i in range(df.shape[0]):
        for j in range(df.shape[1]):
            cell = df.iat[i, j]
            t.cell(i + 1, j).text = str(cell)
    doc.add_paragraph()

    doc.save('FEE3 Autogenerated Word.docx')



#from pynput.mouse import Listener
#def click(x,y,button,pressed):
#    print("Mouse is Clicked at (",x,",",y,")","with",button)
#with Listener(on_click=click) as listener:
#    listener.join()
    
